sow4062 <- c("8079","8082","8081","8077")
sow4135 <- c("8182","8199","8177","8186")
sow4130 <- c("8199","8191","8196","8200")
sow4099 <- c("8113","8108","8112","8117")
sow4098 <- c("8102","8088","8097","8098")
sow4100 <- c("8027","8039","8031","8029")
selected_piglets_females <- c(sow4062,sow4135,sow4130,sow4099,sow4098,sow4100)
penvector <- c("P1","P2","P5","P6","P2","P4","P3","P5","P3","P1","P6","P4","P4","P6","P1","P3","P5","P3","P2","P4","P6","P5","P2","P1")
treatmentvector <- rep(c("T1","T2","T2","T1"),6)
design_females <- pigs %>%
as_tibble() %>%
filter(Piglet %in% selected_piglets_females) %>%
arrange(Sow,Weight) %>%
add_column(Pen=penvector) %>%
add_column(Treatment=treatmentvector)
selected_piglets_females
Ã±ength(selected_piglets_females)
length(selected_piglets_females)
pigs
library(tidyverse)
library(ggplot2)
library(ggrepel)
pigs <- read.csv("/Users/anttonalberdi/Downloads/pig_distribution/pigs.csv")
gender="Male"
gender_table <- table(pigs$Sow,pigs$Gender)
filtered_sows <- rownames(gender_table[gender_table[,2] > 4,])
pigs %>%
as_tibble() %>%
filter(Gender == gender) %>%
filter(Sow %in% filtered_sows) %>%
mutate(Born=as.Date(Born, format = "%d.%m.%y")) %>%
mutate_at(vars(Sow), factor) %>%
group_by(Sow) %>%
mutate(Weight.mean = mean(Weight)) %>%
mutate(Weight.sd = sd(Weight)) %>%
arrange(Weight.mean, Weight.sd, Sow) %>%
ggplot(aes(x=fct_reorder(Sow, Weight.mean),y=Weight,color=Sow,fill=Sow))+
geom_boxplot(alpha=0.5, color= NA, outlier.shape = NA, width = 0.5)+
geom_jitter(width = 0.25)+
geom_text_repel(aes(label = Piglet), nudge_x = 0.1,size=2)+
geom_hline(yintercept = 5.8, color="red")+
geom_hline(yintercept = 8.5, color="red")+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1),
panel.background = element_blank(),
panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(size = 0.5, linetype = "solid", colour = "black")
)
sow4130 <- c("8195","8192","8197","8190")
sow4099 <- c("8114","8106","8119","8120")
sow4062 <- c("8069","8080","8068","8074")
sow4102 <- c("8160","8154","8152","8162")
sow4100 <- c("8053","8038","8040","8037")
sow3384 <- c("8170","8174","8172","8171")
selected_piglets <- c(sow4130,sow4099,sow4062,sow4102,sow4100,sow3384)
penvector <- c("P1","P2","P5","P6","P2","P4","P3","P5","P3","P1","P6","P4","P4","P6","P1","P3","P5","P3","P2","P4","P6","P5","P2","P1")
treatmentvector <- rep(c("T1","T2","T2","T1"),6)
design <- pigs %>%
as_tibble() %>%
filter(Piglet %in% selected_piglets) %>%
arrange(Sow,Weight) %>%
add_column(Pen=penvector) %>%
add_column(Treatment=treatmentvector)
design
design %>%
group_by(Pen) %>%
summarize(mean = mean(Weight), sd = sd(Weight))
design %>%
group_by(Treatment) %>%
summarize(mean = mean(Weight), sd = sd(Weight))
design %>%
ggplot(aes(x=Pen,y=Weight,color=Pen,fill=Pen))+
geom_boxplot(alpha=0.5, color= NA, outlier.shape = NA, width = 0.5)+
geom_jitter(width = 0.25)+
geom_text_repel(aes(label = Piglet), nudge_x = 0.1,size=2)+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1),
panel.background = element_blank(),
panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(size = 0.5, linetype = "solid", colour = "black")
)
design %>%
ggplot(aes(x=Treatment,y=Weight,color=Treatment,fill=Treatment))+
geom_boxplot(alpha=0.5, color= NA, outlier.shape = NA, width = 0.5)+
geom_jitter(width = 0.25)+
geom_text_repel(aes(label = Piglet), nudge_x = 0.1,size=2)+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1),
panel.background = element_blank(),
panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(size = 0.5, linetype = "solid", colour = "black")
)
gender="Female"
gender_table <- table(pigs$Sow,pigs$Gender)
filtered_sows <- rownames(gender_table[gender_table[,1] > 4,])
pigs %>%
as_tibble() %>%
filter(Gender == gender) %>%
filter(Sow %in% filtered_sows) %>%
mutate(Born=as.Date(Born, format = "%d.%m.%y")) %>%
mutate_at(vars(Sow), factor) %>%
group_by(Sow) %>%
mutate(Weight.mean = mean(Weight)) %>%
mutate(Weight.sd = sd(Weight)) %>%
arrange(Weight.mean, Weight.sd, Sow) %>%
ggplot(aes(x=fct_reorder(Sow, Weight.mean),y=Weight,color=Sow,fill=Sow))+
geom_boxplot(alpha=0.5, color= NA, outlier.shape = NA, width = 0.5)+
geom_jitter(width = 0.25)+
geom_hline(yintercept = 5, color="red")+
geom_hline(yintercept = 8, color="red")+
geom_text_repel(aes(label = Piglet), nudge_x = 0.1,size=2)+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1),
panel.background = element_blank(),
panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(size = 0.5, linetype = "solid", colour = "black")
)
sow4062 <- c("8079","8082","8081","8077")
sow4135 <- c("8182","8199","8177","8186")
sow4130 <- c("8199","8191","8196","8200")
sow4099 <- c("8113","8108","8112","8117")
sow4098 <- c("8102","8088","8097","8098")
sow4100 <- c("8027","8039","8031","8029")
selected_piglets_females <- c(sow4062,sow4135,sow4130,sow4099,sow4098,sow4100)
penvector <- c("P1","P2","P5","P6","P2","P4","P3","P5","P3","P1","P6","P4","P4","P6","P1","P3","P5","P3","P2","P4","P6","P5","P2","P1")
treatmentvector <- rep(c("T1","T2","T2","T1"),6)
design_females <- pigs %>%
as_tibble() %>%
filter(Piglet %in% selected_piglets_females) %>%
arrange(Sow,Weight) %>%
add_column(Pen=penvector) %>%
add_column(Treatment=treatmentvector)
pigs %>%
as_tibble() %>%
filter(Piglet %in% selected_piglets_females)
sow4062 <- c("8079","8082","8081","8077")
sow4135 <- c("8182","8177","8187","8186")
sow4130 <- c("8199","8191","8196","8200")
sow4099 <- c("8113","8108","8112","8117")
sow4098 <- c("8102","8088","8097","8098")
sow4100 <- c("8027","8039","8031","8029")
selected_piglets_females <- c(sow4062,sow4135,sow4130,sow4099,sow4098,sow4100)
penvector <- c("P1","P2","P5","P6","P2","P4","P3","P5","P3","P1","P6","P4","P4","P6","P1","P3","P5","P3","P2","P4","P6","P5","P2","P1")
treatmentvector <- rep(c("T1","T2","T2","T1"),6)
design_females <- pigs %>%
as_tibble() %>%
filter(Piglet %in% selected_piglets_females) %>%
arrange(Sow,Weight) %>%
add_column(Pen=penvector) %>%
add_column(Treatment=treatmentvector)
design_females
design %>%
group_by(Pen) %>%
summarize(mean = mean(Weight), sd = sd(Weight))
design %>%
group_by(Treatment) %>%
summarize(mean = mean(Weight), sd = sd(Weight))
design %>%
ggplot(aes(x=Pen,y=Weight,color=Pen,fill=Pen))+
geom_boxplot(alpha=0.5, color= NA, outlier.shape = NA, width = 0.5)+
geom_jitter(width = 0.25)+
geom_text_repel(aes(label = Piglet), nudge_x = 0.1,size=2)+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1),
panel.background = element_blank(),
panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(size = 0.5, linetype = "solid", colour = "black")
)
design %>%
ggplot(aes(x=Treatment,y=Weight,color=Treatment,fill=Treatment))+
geom_boxplot(alpha=0.5, color= NA, outlier.shape = NA, width = 0.5)+
geom_jitter(width = 0.25)+
geom_text_repel(aes(label = Piglet), nudge_x = 0.1,size=2)+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1),
panel.background = element_blank(),
panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(size = 0.5, linetype = "solid", colour = "black")
)
design_females %>%
group_by(Pen) %>%
summarize(mean = mean(Weight), sd = sd(Weight))
design_females %>%
group_by(Treatment) %>%
summarize(mean = mean(Weight), sd = sd(Weight))
design_females %>%
ggplot(aes(x=Pen,y=Weight,color=Pen,fill=Pen))+
geom_boxplot(alpha=0.5, color= NA, outlier.shape = NA, width = 0.5)+
geom_jitter(width = 0.25)+
geom_text_repel(aes(label = Piglet), nudge_x = 0.1,size=2)+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1),
panel.background = element_blank(),
panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(size = 0.5, linetype = "solid", colour = "black")
)
design_females %>%
ggplot(aes(x=Treatment,y=Weight,color=Treatment,fill=Treatment))+
geom_boxplot(alpha=0.5, color= NA, outlier.shape = NA, width = 0.5)+
geom_jitter(width = 0.25)+
geom_text_repel(aes(label = Piglet), nudge_x = 0.1,size=2)+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1),
panel.background = element_blank(),
panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(size = 0.5, linetype = "solid", colour = "black")
)
write.csv(design_males,"design_males.csv")
sow4130 <- c("8195","8192","8197","8190")
sow4099 <- c("8114","8106","8119","8120")
sow4062 <- c("8069","8080","8068","8074")
sow4102 <- c("8160","8154","8152","8162")
sow4100 <- c("8053","8038","8040","8037")
sow3384 <- c("8170","8174","8172","8171")
selected_piglets <- c(sow4130,sow4099,sow4062,sow4102,sow4100,sow3384)
penvector <- c("P1","P2","P5","P6","P2","P4","P3","P5","P3","P1","P6","P4","P4","P6","P1","P3","P5","P3","P2","P4","P6","P5","P2","P1")
treatmentvector <- rep(c("T1","T2","T2","T1"),6)
design_males <- pigs %>%
as_tibble() %>%
filter(Piglet %in% selected_piglets) %>%
arrange(Sow,Weight) %>%
add_column(Pen=penvector) %>%
add_column(Treatment=treatmentvector)
design_males
write.csv(design_males,"design_males.csv")
knitr::opts_chunk$set(echo = TRUE)
setwd("/Users/anttonalberdi/github/holofood_campylo_2023-02")
library(ape)
library(hillR)
library(ggplot2)
library(devtools)
library(tidyverse)
load_all('/Users/anttonalberdi/github/distillR')
anuk="anuk"
kai="kai"
amatxo="amatxo"
aitatxo="aitatxo"
familia=c(anuk,kai,amatxo,aitatxo)
familia
as_tibble(familia)
library(tidyverse)
as_tibble(familia)
familia <- as_tibble(familia)
familia <- familia %>% mutate(adina=c(7,4,36,35))
familia
knitr::opts_chunk$set(echo = TRUE)
alpha_div_func[1,] %>%
enframe() %>% #convert vector to tibble
rename(sample=1,div=2) %>% #rename columns
inner_join(., metadata, by="sample") %>% #merge with metadata
unite("treatment_date", treatment:date, remove = FALSE) %>%
ggplot(aes(x=treatment_date,y=div,group=treatment_date,fill=treatment,color=treatment))+
geom_boxplot(alpha=0.2,color="#00000000",outlier.shape = NA)+
geom_jitter()+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1),
panel.background = element_blank(),
panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(size = 0.5, linetype = "solid", colour = "black")
)
library(tidyverse)
library(ape)
library(devtools)
library(ggplot2)
library(hillR)
library(spaa)
library(vegan)
workingdir="/Users/anttonalberdi/github/3domics_chicken_preliminary/"
counts_file="data/unfiltered_count_table.txt"
tree_file="data/gtdbtk.backbone.bac120.classify.tree"
taxonomy_file="data/gtdbtk_combined_summary.tsv"
metadata_file="data/metadata.tsv"
gift_file="data/GIFT_elements.tsv"
setwd(workingdir)
counts_raw <- read.table(counts_file,header=T, sep="\t")
tree_raw <- read.tree(tree_file)
taxonomy_raw <- read.table(taxonomy_file,header=T, sep="\t")
metadata <- read.table(metadata_file,header=T, sep="\t")
gifts <- read.table(gift_file,header=T, sep="\t")
genomes <- counts_raw[,1]
genomes_length <- counts_raw[,c(1,4)] %>% rename(Length=2)
counts <- counts_raw %>%
select(c(1,seq(2,ncol(.),by=3))) %>% #select mag name + count columns
setNames(gsub("_.*","",names(.))) %>% #simplify sample names
as_tibble() %>% #convert to tibble
dplyr::rename(genome=1) #rename first column
tree <- keep.tip(tree_raw,paste0(genomes,".fa")) #prune gtdb genomes
tree$tip.label <- gsub(".fa","",tree$tip.label) #remove .fa extension
taxonomy <- taxonomy_raw %>%
select(c(1,2)) %>%
separate(classification,into=c("division","phylum","class","order","family","genus","species"), sep=";", convert = TRUE,) %>%
as_tibble() %>%
dplyr::rename(genome=1) %>%
mutate(genome = gsub(".fa","",genome))
alpha_div_neutral <- counts %>%
select(-1) %>% #remove genome column
t() %>% #transpose
hill_taxa(., q = 1) #calculate neutral alpha diversities
alpha_div_neutral
alpha_div_phylo <- counts %>%
column_to_rownames("genome") %>%
t() %>% #transpose
hill_phylo(., tree,q = 1) #calculate  phylogenetic diversities
alpha_div_phylo
alpha_div_func <- counts %>%
column_to_rownames("genome") %>%
t() %>% #transpose
hill_func(., gifts,q = 1) #calculate functional diversities
beta_div_neutral <- counts %>%
select(-1) %>% #remove genome column
t() %>% #transpose
hill_taxa_parti_pairwise(., q = 1, pairs = "full") #calculate neutral beta diversities
save(beta_div_neutral,file="data/beta_div_neutral.Rdata")
beta_div_phylo <- counts %>%
column_to_rownames("genome") %>%
t() %>% #transpose
hill_phylo_parti_pairwise(., tree, q = 1, pairs = "full") #calculate phylogenetic beta diversities
save(beta_div_phylo,file="data/beta_div_phylo.Rdata")
beta_div_func <- counts %>%
column_to_rownames("genome") %>%
t() %>% #transpose
hill_func_parti_pairwise(., gifts, q = 1, pairs = "full") #calculate functional beta diversities
save(beta_div_func,file="data/beta_div_func.Rdata")
alpha_div_neutral %>%
enframe() %>% #convert vector to tibble
rename(sample=1,div=2) %>% #rename columns
inner_join(., metadata, by="sample") %>% #merge with metadata
unite("treatment_date", treatment:date, remove = FALSE) %>%
ggplot(aes(x=treatment_date,y=div,group=treatment_date,fill=treatment,color=treatment))+
geom_boxplot(alpha=0.2,color=NA,outlier.shape = NA)+
geom_jitter()+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1),
panel.background = element_blank(),
panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(size = 0.5, linetype = "solid", colour = "black")
)
alpha_div_phylo %>%
enframe() %>% #convert vector to tibble
rename(sample=1,div=2) %>% #rename columns
inner_join(., metadata, by="sample") %>% #merge with metadata
unite("treatment_date", treatment:date, remove = FALSE) %>%
ggplot(aes(x=treatment_date,y=div,group=treatment_date,fill=treatment,color=treatment))+
geom_boxplot(alpha=0.2,color="#00000000",outlier.shape = NA)+
geom_jitter()+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1),
panel.background = element_blank(),
panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(size = 0.5, linetype = "solid", colour = "black")
)
alpha_div_func[1,] %>%
enframe() %>% #convert vector to tibble
rename(sample=1,div=2) %>% #rename columns
inner_join(., metadata, by="sample") %>% #merge with metadata
unite("treatment_date", treatment:date, remove = FALSE) %>%
ggplot(aes(x=treatment_date,y=div,group=treatment_date,fill=treatment,color=treatment))+
geom_boxplot(alpha=0.2,color="#00000000",outlier.shape = NA)+
geom_jitter()+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1),
panel.background = element_blank(),
panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(size = 0.5, linetype = "solid", colour = "black")
)
counts_barplot <- counts %>%
mutate_at(vars(-genome),~./sum(.)) %>% #apply TSS nornalisation
left_join(., taxonomy, by="genome") %>% #append taxonomy
group_by(genus) %>% #group by genus
summarize(across(.cols = where(is.numeric),.fns = sum)) %>% #aggregate by genus
pivot_longer(!genus, names_to = "sample", values_to = "count") %>% #reduce to minimum number of columns
inner_join(., metadata, by="sample") %>% #append metadata to tibble
left_join(., unique(taxonomy[,c("phylum","class","order","family","genus")]), by="genus") %>% #append taxonomy to tibble (note taxonomy is first dereplicated to ensure there is one value per row)
unite("taxonomy_sort", c("phylum","class","order","family","genus"), remove = FALSE) #create a mock column concatenating taxonomic values to sort stacked vars
counts_barplot %>%
ggplot(aes(x=sample,y=count,fill=phylum, group=taxonomy_sort))+ #grouping enables keeping the same sorting of taxonomic units
geom_bar(stat="identity", colour="white", linewidth=0.1)+ #plot stacked bars with white borders
facet_grid(. ~ treatment + date, scales = "free", space = "free")+ #add the faceting by treatment and date
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1),
panel.background = element_blank(),
panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(size = 0.5, linetype = "solid", colour = "black"),
legend.position="bottom"
)
counts_barplot %>%
ggplot(aes(x=sample, y=count, fill=order, group=taxonomy_sort))+
geom_bar(stat="identity", colour="white", size=0.1)+
facet_grid(. ~ treatment + date, scales = "free", space = "free")+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1),
panel.background = element_blank(),
panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(size = 0.5, linetype = "solid", colour = "black"),
legend.position="bottom"
)
knitr::opts_chunk$set(echo = TRUE)
workingdir="/Users/anttonalberdi/github/3domics_chicken_preliminary/"
counts_file="data/unfiltered_count_table.txt"
tree_file="data/gtdbtk.backbone.bac120.classify.tree"
taxonomy_file="data/gtdbtk_combined_summary.tsv"
metadata_file="data/metadata.tsv"
gift_file="data/GIFT_elements.tsv"
target_file="data/target_taxa.tsv"
setwd(workingdir)
counts_raw <- read.table(counts_file,header=T, sep="\t")
tree_raw <- read.tree(tree_file)
taxonomy_raw <- read.table(taxonomy_file,header=T, sep="\t")
metadata <- read.table(metadata_file,header=T, sep="\t")
gifts <- read.table(gift_file,header=T, sep="\t")
target <- read.table(target_file,header=T)
genomes <- counts_raw[,1]
genomes_length <- counts_raw[,c(1,4)] %>% rename(Length=2)
genomes <- counts_raw[,1]
genomes_length <- counts_raw[,c(1,4)] %>% rename(Length=2)
counts <- counts_raw %>%
select(c(1,seq(2,ncol(.),by=3))) %>% #select mag name + count columns
setNames(gsub("_.*","",names(.))) %>% #simplify sample names
as_tibble() %>% #convert to tibble
dplyr::rename(genome=1) #rename first column
taxonomy <- taxonomy_raw %>%
select(c(1,2)) %>%
separate(classification,into=c("division","phylum","class","order","family","genus","species"), sep=";", convert = TRUE,) %>%
as_tibble() %>%
dplyr::rename(genome=1) %>%
mutate(genome = gsub(".fa","",genome))
taxonomy <-  taxonomy %>%
left_join(target,by="genome") %>%
rename(species=species.x,target=species.y) %>%
mutate_at(vars(target),~ if_else(!is.na(.), '1', .)) %>%
mutate_at(vars(target),~ if_else(is.na(.), '0', .))
counts %>%
mutate_at(vars(-genome),~./sum(.)) %>% #apply TSS nornalisation
left_join(., taxonomy, by="genome") %>% #append taxonomy
group_by(target) %>% #group by genus
summarize(across(.cols = where(is.numeric),.fns = sum)) %>% #aggregate by genus
pivot_longer(!target, names_to = "sample", values_to = "count") %>% #reduce to minimum number of columns
inner_join(., metadata, by="sample") %>%
ggplot(aes(x=sample,y=count,fill=target, group=target))+ #grouping enables keeping the same sorting of taxonomic units
geom_bar(stat="identity", colour="white", linewidth=0.1)+ #plot stacked bars with white borders
facet_grid(. ~ treatment + date, scales = "free", space = "free")+ #add the faceting by treatment and date
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1),
panel.background = element_blank(),
panel.border = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(size = 0.5, linetype = "solid", colour = "black"),
legend.position="bottom"
)
install.packages("nonpareil")
install.packages("Nonpareil")
library(Nonpareil);
npdata <- Nonpareil.set('/Users/anttonalberdi/Downloads/EHI00089.npo')
head(npdata)
npdata
summary(npdata)
?Nonpareil.set
npdata <- Nonpareil.set('/Users/anttonalberdi/Downloads/EHI00089.npo', plot=F)
as.data.frame(summary(npdata))
summary(npdata) %>%
as_tibble()
library(nonpareil)
library(tidyverse)
summary(npdata) %>%
as_tibble()
summary(npdata) %>%
rownames_to_column(., var = "sample")
summary(npdata) %>%
as.data.frame() %>%
rownames_to_column(., var = "sample")
Nonpareil.set('/Users/anttonalberdi/Downloads/EHI00089.npo', plot=F) %>%
summary() %>%
as.data.frame() %>%
rownames_to_column(., var = "sample")
Nonpareil.set('/Users/anttonalberdi/Downloads/EHI00089.npo', plot=F) %>%
summary() %>%
as.data.frame() %>%
rownames_to_column(., var = "sample") %>%
write.table(.,'/Users/anttonalberdi/Downloads/EHI00089.tsv',col.names=T,row.names=F,sep="\t",quotes=F)
Nonpareil.set('/Users/anttonalberdi/Downloads/EHI00089.npo', plot=F) %>%
summary() %>%
as.data.frame() %>%
rownames_to_column(., var = "sample") %>%
write.table(.,'/Users/anttonalberdi/Downloads/EHI00089.tsv',col.names=T,row.names=F,sep="\t",quote=F)
install.packages("sybil")
library(sybil)
require(devtools)
install_version("sybil", version = "2.2.0", repos = "http://cran.us.r-project.org")
library(sybil)
setwd("/github/campylo_gsmn")
setwd("/Users/anttonalberdi/github/campylo_gsmn")
model <- readSBML("recon2/sbml/ERR4836918_bin_11.sbml")
install.packages("rsbml")
if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("rsbml")
library(rsbml)
install_version("sybilSBML", version = "3.1.2", repos = "http://cran.us.r-project.org")
